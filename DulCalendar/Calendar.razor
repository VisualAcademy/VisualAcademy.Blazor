@{
    int count = 1;
}

<div class="dulcalendar">
    <div class="month">
        <ul>
            <li class="prev" @onclick="PrevMonth" style="cursor: pointer;">&#10094;</li>
            <li class="next" @onclick="NextMonth" style="cursor: pointer;">&#10095;</li>
            <li style="cursor: pointer;" @onclick="@(() => { this.SelectedDate = DateTime.Today; })">@SelectedDate.ToString("yyyy년 MM월")</li>
        </ul>
    </div>
    <ul class="weekdays">
        <li>Su</li>
        <li>Mo</li>
        <li>Tu</li>
        <li>We</li>
        <li>Th</li>
        <li>Fr</li>
        <li>Sa</li>
    </ul>

    <ul class="days">
        @for (int i = 0; i < StartDayOfWeek; i++)
        {
            <li>&nbsp;</li>
            count++;
        }
        @for (int i = 1; i <= LastDayOfMonth; i++)
        {
            var current = this.CurrentDay(i);
            <li @onclick="() => ChangeSeletecdDate(current.ThisDay)"><span class="@current.Today @current.Active">@i</span></li>
            count++;
        }
        @for (int i = 0; i < 38 - count; i++)
        {
            <li>&nbsp;</li>
        }
    </ul>
</div>

@code {
    /// <summary>
    /// 현재 선택된 날짜(초깃값은 오늘 날짜)
    /// </summary>
    public DateTime SelectedDate { get; private set; } = DateTime.Today;

    /// <summary>
    /// 0부터 6까지의 오프셋 값 반환
    /// </summary>
    public int StartDayOfWeek
    {
        get
        {
            return (int)((new DateTime(this.SelectedDate.Year, this.SelectedDate.Month, 1)).DayOfWeek);
        }
    }

    /// <summary>
    /// 현재 선택된 월의 일수
    /// </summary>
    public int LastDayOfMonth
    {
        get
        {
            return DateTime.DaysInMonth(this.SelectedDate.Year, this.SelectedDate.Month);
        }
    }

    /// <summary>
    /// 이전 달 1일로 이동
    /// </summary>
    protected void PrevMonth()
    {
        this.SelectedDate = this.SelectedDate.AddMonths(-1);
        this.SelectedDate = new DateTime(this.SelectedDate.Year, this.SelectedDate.Month, 1);
    }

    /// <summary>
    /// 다음 달 1일로 이동
    /// </summary>
    protected void NextMonth()
    {
        this.SelectedDate = this.SelectedDate.AddMonths(+1);
        this.SelectedDate = new DateTime(this.SelectedDate.Year, this.SelectedDate.Month, 1);
    }

    protected (DateTime ThisDay, string Today, string Active) CurrentDay(int dayOfMonth)
    {
        var thisDay = new DateTime(this.SelectedDate.Year, this.SelectedDate.Month, dayOfMonth);
        var today = (thisDay.Date == DateTime.Today.Date) ? "today" : null;
        var active = (thisDay == this.SelectedDate) ? "active" : null;
        return (thisDay, today, active);
    }

    protected void ChangeSeletecdDate(DateTime newDate)
    {
        this.SelectedDate = newDate;

        OnSelectedDateChanged.InvokeAsync(this.SelectedDate); // 부모에게 전달
    }

    [Parameter] public EventCallback<DateTime> OnSelectedDateChanged { get; set; }
}
